version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api/v1
      - REACT_APP_SOCKET_URL=http://localhost:8080
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=skillswap
      - DB_USER=skillswap_user
      - DB_PASSWORD=skillswap_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your_super_secret_jwt_key_change_in_production
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - mysql
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads

  # Socket.IO Server (can be combined with backend in production)
  socket-server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=skillswap
      - DB_USER=skillswap_user
      - DB_PASSWORD=skillswap_password
    depends_on:
      - mysql
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules

  # MySQL Database
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: skillswap
      MYSQL_USER: skillswap_user
      MYSQL_PASSWORD: skillswap_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    profiles:
      - production

  # AI Recommendation Service (Optional Microservice)
  ai-recommender:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    environment:
      - MODEL_PATH=/app/models
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=skillswap
      - DB_USER=skillswap_user
      - DB_PASSWORD=skillswap_password
    depends_on:
      - mysql
    volumes:
      - ./ai-service:/app
      - ai_models:/app/models
    profiles:
      - ai-enabled

volumes:
  mysql_data:
  redis_data:
  ai_models:

networks:
  default:
    driver: bridge
